---

name: Что такое переменная
theory: |

  Представьте себе задачу, нам нужно напечатать на экран фразу _Father!_ два раза или даже пять раз. Эту задачу можно решить в лоб:

  ```python
  print('Father!')
  print('Father!')
  ```

  В простейшем случае так и стоит поступить, но если фраза _Father!_ начнет использоваться чаще, да еще и в разных частях программы, то придется ее везде повторять. Проблемы с таким подходом начнутся тогда, когда понадобится изменить нашу фразу, а такое происходит довольно часто. Нам придется найти все места где использовалось фраза _Father!_ и выполнить необходимую замену. А можно поступить по другому. Вместо копирования нашего выражения, достаточно создать переменную с этой фразой.

  ```python
  # greeting - переводится как приветствие
  greeting = 'Father!'
  print(greeting)
  print(greeting)
  ```

  В строчке `greeting = 'Father!'` - происходит присваивание значения `'Father!'` переменной с именем `greeting`. Переменная указывает на данные, которые были в неё записаны. Благодаря этому, данные можно использовать многократно без необходимости их постоянно дублировать.

  Когда переменная создана, можно начать её использовать. Она подставляется в те места, где раньше стояла наша фраза. Во время выполнения кода, интерпретатор (то, что выполняет код на Python), доходит до строчки `print(greeting)` и подставляет вместо переменной её содержимое, а затем выполняет код. В результате вывод нашей программы будет таким:

  <pre class='hexlet-basics-output'>
    Father!
    Father!
  </pre>

  Для имени переменной используется любой набор допустимых символов, к которым относятся буквы английского алфавита, цифры и знак `_`. При этом цифру нельзя ставить в начале. Имена переменных регистрозависимы, то есть имя `hello` и имя `heLLo` - это два разных имени, а значит и две переменные. Регистр в Python имеет важное значение, никогда не забывайте про него.

  Количество создаваемых переменных никак не ограничено, большие программы содержат десятки и сотни тысяч имен переменных:

  ```python
  greeting1 = 'Father!'
  print(greeting1)
  print(greeting1)

  greeting2 = 'Mother!'
  print(greeting2)
  print(greeting2)
  ```

  Для удобства анализа программы, переменные принято создавать как можно ближе к тому месту где они используются.

instructions: |

  Создайте переменную с именем `motto` и содержимым `What Is Dead May Never Die!`. Распечайте содержимое переменной.


tips:
  - |
    [Именование в программировании](https://ru.hexlet.io/blog/posts/naming-in-programming)

definitions:
  - name: Переменная
    description: способ сохранить информацию и дать ей имя для последующего использования в коде.
