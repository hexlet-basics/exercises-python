---

name: Магические числа
theory: |

  Вспомним один из прошлых уроков:

  ```python
  euros_count = 1000
  dollars_count = euros_count * 1.25  # 1250.0
  rubles_count = dollars_count * 60   # 75000.0

  print(rubles_count)
  ```

  С точки зрения профессиональной разработки, такой код «пахнет». Так описывают код, который не соответствует так называемым лучшим практикам (best practices). И причина здесь вот в чем: уже сейчас, глядя на числа `60` и `1.25`, вы скорее всего задаетесь вопросом: «что это за числа?». А представьте, что будет через месяц! А как его поймет новый программист, не видевший код ранее? В нашем примере контекст восстанавливается благодаря грамотному именованию, но в реальной жизни код значительно сложнее, и поэтому догадаться до смысла чисел зачастую невозможно.

  Этот «запах» называют магические числа (magic numbers). Числа, происхождение которых невозможно понять без глубокого знания происходящего внутри данного участка кода.

  Выход из ситуации прост: достаточно создать переменные с правильными именами, как все встанет на свои места.

  ```python
  dollars_per_euro = 1.25
  roubles_per_dollar = 60

  euros_count = 1000
  dollars_count = euros_count * dollars_per_euro     # 1250.0
  rubles_count = dollars_count * roubles_per_dollar  # 75000.0

  print(rubles_count)
  ```

  Обратите внимание на следующие детали:

  * Именование snake_case.
  * Две новые переменные отделены от последующих вычислений пустой строчкой. Эти переменные имеют смысл и без вычислений, поэтому такое отделение уместно, оно повышает читаемость.
  * Получился хорошо именованный и структурированный код, но он длиннее прошлой версии. Так часто бывает, и это нормально, потому что код должен быть читабельным.

instructions: |

  Вы столкнулись с таким кодом, который выводит на экран общее количество комнат во владении нынешнего короля:

  ```python
  king = "Rooms in King Balon's Castle:"
  print(king)
  print(6 * 17)
  ```

  Как видите, это магические числа: непонятно, что такое 6 и что такое 17. Можно догадаться, если знать историю королевской семьи: каждый новый король получает в наследство все замки от предков и строит новый замок — точную копию родительского.

  Эта странная династия просто плодит одинаковые замки…

  Избавьтесь от магических чисел, создав новые переменные, а затем выведите текст на экран.

  Получится так:

  <pre class='hexlet-basics-output'>
  Rooms in King Balon's Castle:
  102
  </pre>

  Названия переменных должны передавать смысл чисел, но должны при этом оставаться достаточно короткими и ёмкими для комфортного чтения.

  Помните: код будет работать с любыми названиями, а наша система всегда проверяет только результат на экране, поэтому выполнение этого задания — под вашу ответственность.

tips: []
