---

name: Сигнатура функции
theory: |

  Функция `pow()`, возводящая число в какую-нибудь степень, принимает два параметра: **какое число возводить** и **в какую степень возводить**. Если вызывать `pow()` без параметров, то Python выдаст следующее: "TypeError: pow expected at least 2 arguments, got 0". Интерпретатор сообщает, что функция ожидает 2 параметра, а вы вызвали её без параметров.

  Тот, кто создавал функцию `pow()`, сделал её функцией с двумя обязательными параметрами, поэтому `pow()` невозможно вызвать с другим количеством параметров.

  Более того, параметрами `pow()` могут быть только числа. Попытка передать в неё, например, пару строк приведет к следующей ошибке: "TypeError: unsupported operand type(s) for ** or pow(): 'str' and 'str'". Результат вызова функции — тоже всегда число.

  Другая функция может иметь другое число параметров и другие типы параметров. Например, может существовать функция, которая принимает три параметра: число, строку и еще одно число.

  Откуда мы знаем, сколько каких параметров нужно функции `pow()` и какого типа будет «возврат»? Мы заглянули в **сигнатуру** этой функции. Сигнатура определяет входные параметры и их типы, а так же выходной параметр и его тип. Про функцию `pow()` можно почитать в [официальной документации Python](https://docs.python.org/3/library/functions.html?highlight=pow#pow) или в [неофициальной документации на русском языке](https://pythoner.name/documentation/library/functions#pow). Обычно документация для функции имеет вид:

    ```
    pow(x, y[, z])

    Возвращает x в степени y; если z присутствует, возвращает x в степени y, по модулю z.
    ```

  Первая строка здесь, это сигнатура функции. Следом идёт пояснение, для чего функция нужна. Документация позволяет понять сколько аргументов у функции и какого они типа, возвращает ли что-то функция и если да, то какой тип будет иметь возвращаемое значение.

instructions: |

  Теперь ваша очередь посмотреть на сигнатуру функции в документации и разобраться, как её использовать. Можете читать [документацию на русском языке](https://pythoner.name/documentation), но программист обязан уметь читать [документацию на английском](https://docs.python.org/3). Используйте словари или переводчики при необходимости. Лучше сразу привыкать и подтягивать навыки чтения на английском, иначе будут сложности в будущем.

  В Python есть функция `hex()`. Изучите её сигнатуру на [странице документации](https://pythoner.name/documentation/library/functions#hex).

  Напишите программу, которая использует функцию `hex()` с переменной `number` и выводит результат на экран.

tips: []

definitions:
  - name: Сигнатура функции
    description: формальное описание типов аргументов и типа возвращаемого значения функции.
