---

name: Параметры функций
theory: |

  Для добавления параметров в собственные функции, достаточно указать их в скобках при определении функции. Ниже пример определения функции, которая возвращает последний символ в строке:

  ```python
  # str - параметр
  def get_last_char(str):
      return str[-1]

  get_last_char('Hexlet') # "t"
  get_last_char('Goo') # "o"
  ```

  У функции `get_last_char()` ровно один параметр - переменная `str`. При вызове функции, туда подставляется конкретное значение. Для каждого вызова свое собственное. А вот такой код не сработает:

  ```python
  def get_last_char('some string'):
  ```

  Конкретное значение не может указываться как параметр, смысл параметра в том, что значение становится известно только во время конкретного вызова, поэтому в определении должны быть имена переменных.

  Можно указывать два, три и более параметров. Ниже пример функции, которая находит среднее между двумя числами:

  ```python
  def average(x, y):
      return (x + y) / 2

  average(1, 5) # 3
  average(1, 2) # 1.5
  ```

  Порядок определения параметров и передачи их в функцию должны совпадать, поэтому внимательно следите за тем, что написано в документации. В редких случая, как выше порядок не важен, но для большинства функций имеет критическое значение:

  ```python
  # Округление. Первый параметр - число, второй - точность
  round(10.32, 1) # 10.3
  # Такой вызов завершится с ошибкой
  round(1, 10.32) # TypeError: 'float' object cannot be interpreted as an integer
  ```

  Параметры в Python часто называют аргументами. В программировании вы будете встречать эти слова часто как синонимы. Но между ними все же есть небольшая разница. Строго говоря, параметры задаются при определении функции в скобках, а аргументы, это то, что передается в функцию при ее вызове.

instructions: |

  Реализуйте функцию `truncate()`, которая обрезает переданный текст и добавляет в конце троеточие. Подобная логика часто используется на сайтах, чтобы отобразить длинный текст в сокращенном виде. Параметры функции:

  1. Строка, которую нужно обрезать
  2. Число символов, которые нужно оставить

  ```python
  truncate('hexlet', 2) # "he..."

  text = 'it works!'
  result = truncate(text, 4);
  print(result); # => 'it w...'
  ```

  В этой задаче вам нужно взять подстроку из строки, переданной первым параметром. Для этого используйте срезы строк. Подумайте исходя из задания, с какого индекса и по какой вам надо извлечь подстроку?

# tips:
#   - |
#     Чтобы указать в аргументах метода printSeq() целое число, используйте тип данных `int`.


