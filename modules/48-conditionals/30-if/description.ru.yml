---

name: Условная конструкция (if)
theory: |

  Условные конструкции позволяют изменить поведение программы в зависимости от проверяемых условий. Благодаря им у нас появляется возможность писать сложные программы, ведущие себя по разному, в зависимости от ситуации.

  Напишем, для примера, функцию, которая определяет тип переданного предложения. Для начала она будет отличать обычные предложения от вопросительных.

  ```python
  def get_type_of_sentence(sentence):
      last_char = sentence[-1]
      if last_char == '?':
          return 'question'
      return 'normal'

  print(get_type_of_sentence('Hodor'))  # => normal
  print(get_type_of_sentence('Hodor?')) # => question
  ```

  `if` - конструкция языка, управляющая порядком выполнения инструкций. После слова `if` ей передается выражение-предикат, завершающееся двоеточием. После этого описывается блок кода. Этот блок кода будет выполнен, только если предикат — истина.

  Если предикат — ложь, то блок кода пропускается, и функция продолжает свое выполнение дальше. В нашем случае следующая строчка кода — `return 'normal';` — заставит функцию вернуть строку и завершиться.

  Как видите, `return` может находиться где угодно в функции. В том числе внутри блока кода с условием.

instructions: |

  Реализуйте функцию `guess_number()`, которая принимает число и проверяет, равно ли число заданному (пусть это будет 42). Если равно, то функция должна вернуть строку `'You win!'`, в противном случае нужно вернуть строку `'Try again!'`.

  ```python
  guess_number(42) # 'You win!'
  guess_number(61) # 'Try again!'
  ```

tips: []

definitions:
  - name: "Условная конструкция"
    description: "способ задать условие для выполнения кода. Например, `if x > 10: ... `"
