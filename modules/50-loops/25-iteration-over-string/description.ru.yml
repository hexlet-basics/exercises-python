---

name: Обход строк
theory: |

  Циклы подходят не только для обработки чисел, но и при работе со строками. В первую очередь благодаря возможности получить конкретный символ по его индексу. Ниже пример кода, который распечатывает буквы каждого слова на отдельной строке:

  ```python
  def print_name_by_symbol(name):
      i = 0
      # Такая проверка будет выполняться до конца строки
      # включая последний символ. Его индекс `length - 1`.
      while i < len(name):
          # Обращаемся к символу по индексу
          print(name[i])
          i = i + 1

  name = 'Arya'
  print_name_by_symbol(name)
  # => 'A'
  # => 'r'
  # => 'y'
  # => 'a'
  ```

  Самое главное в этом коде, поставить правильное условие в `while`. Это можно сделать сразу двумя способами: `i < len(name)` или `i <= len(name) - 1`. Оба способа приводят к одному результату.

instructions: |

  Реализуйте функцию `print_reversed_word_by_symbol()`, которая печатает переданное слово посимвольно, как в примере из теории, но делает это в обратном порядке.

  ```python
  word = 'Hexlet'

  print_reversed_word_by_symbol(word)
  # => 't'
  # => 'e'
  # => 'l'
  # => 'x'
  # => 'e'
  # => 'H'
  ```

tips: []
